{"version":3,"sources":["components/cards/cards.component.js","components/card-list/card-list.component.js","components/search-box/search.box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","search","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAQ,SAACC,GACpB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAKL,EAAMG,QAAQG,OAC/F,6BAAMN,EAAMG,QAAQG,OACpB,kCAAKN,EAAMG,QAAQI,MAAnB,WCJOC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACID,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQC,UCLnBO,G,MAAY,SAAC,GAAqC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,aACxC,OAEG,uBACGC,KAAK,SACLC,SAAWF,EACXD,YAAcA,MC8BPI,E,kDAjCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAU,CAAEC,OAAQF,EAAEG,OAAOC,SAblC,EAAKC,MAAQ,CACXb,SAAU,GACVU,OAAQ,IAJE,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAG,GAAK,OAAI,EAAKT,SAAU,CAAET,SAAUkB,S,oBAO7C,WACE,MAA6BC,KAAKN,MAA1Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,OACZU,EAAmBpB,EAASqB,QAAQ,SAAA3B,GAAO,OAAIA,EAAQG,KAAKyB,cAAcC,SAASb,EAAOc,wBAChG,OACE,sBAAKhC,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CACEY,aAAce,KAAKf,aACnBD,YAAY,wBAEd,cAAC,EAAD,CAAUH,SAAWoB,W,GA7BTK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8f26fa3e.chunk.js","sourcesContent":["import React from \"react\";\nimport './cards.style.css'\n\nexport const Cards = (props) => {\n  return(\n    <div className=\"card-container\">\n      <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt={props.monster.name} />\n      <h2>{ props.monster.name }</h2>\n      <p> {props.monster.email} </p>\n    </div>\n  )\n\n}","import React from \"react\";\nimport './card-list.style.css'\nimport { Cards } from \"../cards/cards.component\";\n\nexport const CardList = (props) => {\n  return(\n    <div className='card-list'>\n      { props.monsters.map(monster => (\n            <Cards key={monster.id} monster={monster} />\n        )) \n      } \n    </div>\n  )\n}","import React from \"react\";\nimport './search-box.style.css'\n\nexport const SearchBox = ( { placeholder, handleChange } ) => {\n  return (\n\n     <input \n        type='search' \n        onChange={ handleChange } \n        placeholder={ placeholder } \n      />\n\n  )\n} ","import React, { Component } from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search.box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      search: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then( res => res.json() )\n    .then( users => this.setState( { monsters: users } ) )\n  }\n\n  handleChange = (e) => {\n    this.setState( { search: e.target.value } ) \n  }\n\n  render() {\n    const { monsters, search } = this.state;\n    const filteredMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(search.toLocaleLowerCase()) ); \n    return(\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox \n        handleChange={this.handleChange} \n        placeholder='search for monsters' \n      />\n      <CardList monsters={ filteredMonsters } />\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}